name: Deploy to Google Cloud Functions

on:
  push:
    branches: [ production ]
  pull_request:
    branches: [ production ]

jobs:
  deploy:
    name: Deploy to Cloud Functions
    runs-on: ubuntu-latest

    # Only deploy on pushes to production branch
    if: github.ref == 'refs/heads/production' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests (if any)
      run: |
        # Add test commands here when you have tests
        echo "No tests configured yet"

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Create service account key file
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' > ${{ secrets.SA_KEY_PATH }}

    - name: Create temporary .env file from secrets
      run: |
        cat > .env << EOF
        ENVIRONMENT=production
        SA_KEY_PATH=${{ secrets.SA_KEY_PATH }}
        SHEET_NAME=${{ secrets.SHEET_NAME }}
        MAX_GROSS_SALARY=${{ secrets.MAX_GROSS_SALARY }}
        RATE_LIMIT=${{ secrets.RATE_LIMIT }}
        SHEET_ID=${{ secrets.SHEET_ID }}
        MAX_GROSS_SALARY=${{ secrets.MAX_GROSS_SALARY }}

        # Add other environment variables from secrets as needed
        # EXAMPLE: DATABASE_URL=${{ secrets.DATABASE_URL }}
        EOF

    - name: Deploy to Cloud Functions
      run: |
        gcloud functions deploy benin-salaire-calculator \
          --runtime=python310 \
          --region=${{ secrets.GCP_REGION }} \
          --source=. \
          --entry-point=main \
          --trigger-http \
          --allow-unauthenticated \
          --memory=256MB \
          --timeout=60s \
          --max-instances=10 \
          --set-env-vars="ENVIRONMENT=production"

    - name: Clean up credentials and temporary files
      run: |
        rm -f ${{ secrets.SA_KEY_PATH }}
        rm -f ./.env

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run tests
      run: |
        python -m pytest tests/ -v

    - name: Run linting
      run: |
        # Install flake8 for linting
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Security check
      run: |
        pip install bandit
        bandit -r . -f json || true